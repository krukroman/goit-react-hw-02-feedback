{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOption/FeedbackOption.module.css","App.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.js","Components/FeedbackOptions/FeedbackOption/FeedbackOption.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackOption","name","onLeaveFeedback","item","type","button","onClick","value","charAt","toUpperCase","slice","FeedbackOptions","options","list","Object","keys","map","key","Statistics","good","neutral","bad","total","positivePercentage","text","App","state","handleAddFeedback","feedbackValue","stateName","toLowerCase","setState","prevState","values","this","reduce","acc","Math","round","countTotal","container","countPositivePercentage","infoText","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51307855.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__bjHvb\",\"item\":\"Statistics_item__xe-lu\",\"text\":\"Statistics_text__oRxRc\",\"value\":\"Statistics_value__2lajY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOption_item__2punl\",\"button\":\"FeedbackOption_button__Bme7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b0D6\",\"infoText\":\"App_infoText__3lqU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1kvLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1R4EQ\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOption.module.css';\n\nexport default function FeedbackOption({ name, onLeaveFeedback }) {\n  return (\n    <li className={s.item}>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => onLeaveFeedback(name)}\n        value={name}\n      >\n        {name.charAt(0).toUpperCase() + name.slice(1)}\n      </button>\n    </li>\n  );\n}\n\nFeedbackOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FeedbackOption from './FeedbackOption';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {Object.keys(options).map(key => {\n        return (\n          <FeedbackOption\n            key={key}\n            name={key}\n            onLeaveFeedback={() => onLeaveFeedback(key)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <p className={s.text}>\n          Good:\n          <span className={s.value}>{good}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Neutral:\n          <span className={s.value}>{neutral}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Bad:\n          <span className={s.value}>{bad}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Total:\n          <span className={s.value}>{total}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Positive feedback:\n          <span className={s.value}>{positivePercentage}%</span>\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { Component } from 'react';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotal() {\n    return Object.values(this.state).reduce((acc, value) => {\n      return (acc = acc + value);\n    }, 0);\n  }\n\n  countPositivePercentage() {\n    const { good } = this.state;\n    return Math.round((good / this.countTotal()) * 100);\n  }\n\n  handleAddFeedback = feedbackValue => {\n    const stateName = feedbackValue.toLowerCase();\n    this.setState(prevState => ({\n      [stateName]: prevState[stateName] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleAddFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotal() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotal()}\n              positivePercentage={this.countPositivePercentage()}\n            />\n          ) : (\n            <p className={s.infoText}>No feedback given</p>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}