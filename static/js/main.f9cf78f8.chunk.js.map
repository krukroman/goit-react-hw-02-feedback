{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOption/FeedbackOption.module.css","App.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.js","Components/FeedbackOptions/FeedbackOption/FeedbackOption.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackOption","name","onLeaveFeedback","item","type","button","onClick","toUpperCase","FeedbackOptions","options","list","Object","keys","map","key","Statistics","good","neutral","bad","total","positivePercentage","text","value","App","state","handleAddFeedback","e","stateName","target","innerText","toLowerCase","setState","prevState","values","this","reduce","acc","Math","round","countTotal","container","countPositivePercentage","infoText","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9cf78f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__bjHvb\",\"item\":\"Statistics_item__xe-lu\",\"text\":\"Statistics_text__oRxRc\",\"value\":\"Statistics_value__2lajY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOption_item__2punl\",\"button\":\"FeedbackOption_button__Bme7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b0D6\",\"infoText\":\"App_infoText__3lqU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1kvLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1R4EQ\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOption.module.css';\n\nexport default function FeedbackOption({ name, onLeaveFeedback }) {\n  return (\n    <li className={s.item}>\n      <button type=\"button\" className={s.button} onClick={onLeaveFeedback}>\n        {name.toUpperCase()}\n      </button>\n    </li>\n  );\n}\n\nFeedbackOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FeedbackOption from './FeedbackOption';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {Object.keys(options).map(key => {\n        return (\n          <FeedbackOption\n            key={key}\n            name={key}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        <p className={s.text}>\n          Good:\n          <span className={s.value}>{good}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Neutral:\n          <span className={s.value}>{neutral}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Bad:\n          <span className={s.value}>{bad}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Total:\n          <span className={s.value}>{total}</span>\n        </p>\n      </li>\n      <li className={s.item}>\n        <p className={s.text}>\n          Positive feedback:\n          <span className={s.value}>{positivePercentage}%</span>\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { Component } from 'react';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotal() {\n    return Object.values(this.state).reduce((acc, value) => {\n      return (acc = acc + value);\n    }, 0);\n  }\n\n  countPositivePercentage() {\n    const { good } = this.state;\n    return Math.round((good / this.countTotal()) * 100);\n  }\n\n  handleAddFeedback = e => {\n    const stateName = e.target.innerText.toLowerCase();\n    this.setState(prevState => ({\n      [stateName]: prevState[stateName] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={s.container}>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleAddFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotal() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotal()}\n              positivePercentage={this.countPositivePercentage()}\n            />\n          ) : (\n            <p className={s.infoText}>No feedback given</p>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}